<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Bot.Streaming</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Bot.Streaming.Payloads.IContentStream">
            <summary>
            Implemented by stream attachments compatible with the Bot Framework Protocol 3 with Streaming Extensions.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Payloads.IContentStream.Id">
            <summary>
            Gets a guid to use as the unique identifier of this ContentStream.
            </summary>
            <value>
            Guid.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Payloads.IContentStream.ContentType">
            <summary>
            Gets or sets the name of the type of the object contained within this ContentStream.
            </summary>
            <value>
            Plain text type name.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Payloads.IContentStream.Length">
            <summary>
            Gets or sets the length of this ContentStream.
            </summary>
            <value>
            Null or a numeric value bound by Min/Max Int.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Payloads.IContentStream.Stream">
            <summary>
            Gets the data contained within this ContentStream.
            </summary>
            <value>
            A <see cref="P:Microsoft.Bot.Streaming.Payloads.IContentStream.Stream"/> of data.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Payloads.RequestPayload.Verb">
            <summary>
            Gets or sets request verb, null on responses.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Payloads.RequestPayload.Path">
            <summary>
            Gets or sets request path; null on responses.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Payloads.RequestPayload.Streams">
            <summary>
            Gets or sets assoicated stream descriptions.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Payloads.ResponsePayload.StatusCode">
            <summary>
            Gets or sets status - The Response Status.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Payloads.ResponsePayload.Streams">
            <summary>
            Gets or sets assoicated stream descriptions.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Payloads.PayloadStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            This function is called by StreamReader when processing streams.
            It will appear to have no references, but is in fact required to
            be implemented by StreamReader, just like Length.
            </summary>
            <param name="buffer">The buffer to read from.</param>
            <param name="offset">The position to begin reading from.</param>
            <param name="count">The amount to attempt to read.</param>
            <returns>The number of chunks remaining unread in the buffer.</returns>
        </member>
        <member name="T:Microsoft.Bot.Streaming.Payloads.ResponseMessageStream">
            <summary>
            An attachment contained within a <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/>'s stream collection,
            which itself contains any form of media item.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Payloads.ResponseMessageStream.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Streaming.Payloads.ResponseMessageStream"/> class.
            and assigns an unique guid as its Id.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Payloads.ResponseMessageStream.#ctor(System.Guid)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Streaming.Payloads.ResponseMessageStream"/> class.
            </summary>
            <param name="id">A <see cref="T:System.Guid"/> to assign as the Id of this instance of <see cref="T:Microsoft.Bot.Streaming.Payloads.ResponseMessageStream"/>.
            If null a new <see cref="T:System.Guid"/> will be generated.
            </param>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Payloads.ResponseMessageStream.Id">
            <summary>
            Gets the <see cref="T:System.Guid"/> used to identify this <see cref="T:Microsoft.Bot.Streaming.Payloads.ResponseMessageStream"/>.
            </summary>
            <value>
            A <see cref="T:System.Guid"/> used to identify this <see cref="T:Microsoft.Bot.Streaming.Payloads.ResponseMessageStream"/>.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Payloads.ResponseMessageStream.Content">
            <summary>
            Gets or sets the <see cref="T:System.Net.Http.HttpContent"/> of this <see cref="T:Microsoft.Bot.Streaming.Payloads.ResponseMessageStream"/>.
            </summary>
            <value>
            The <see cref="T:System.Net.Http.HttpContent"/> of this <see cref="T:Microsoft.Bot.Streaming.Payloads.ResponseMessageStream"/>.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Streaming.PayloadTransport.PayloadSender">
            <summary>
            On Send: queues up sends and sends them along the transport.
            On Receive: receives a packet header and some bytes and dispatches it to the subscriber.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Streaming.ReceiveRequest">
            <summary>
            An incoming request from a remote client.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.ReceiveRequest.Verb">
            <summary>
            Gets or sets the verb action this request wants to perform.
            </summary>
            <value>
            The string representation of an HTTP verb.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.ReceiveRequest.Path">
            <summary>
            Gets or sets the path this request wants to be routed to.
            </summary>
            <value>
            The string representation of the URL style path to request wants to be routed to.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.ReceiveRequest.Streams">
            <summary>
            Gets or sets the collection of stream attachments included in this request.
            </summary>
            <value>
            A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:Microsoft.Bot.Streaming.Payloads.IContentStream"/> items associated with this request.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Streaming.ReceiveRequestExtensions">
            <summary>
            Helper methods added to the <see cref="T:Microsoft.Bot.Streaming.ReceiveRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.ReceiveRequestExtensions.ReadBodyAsJson``1(Microsoft.Bot.Streaming.ReceiveRequest)">
            <summary>
            Serializes the body of this <see cref="T:Microsoft.Bot.Streaming.ReceiveRequest"/> as JSON.
            </summary>
            <typeparam name="T">The type to attempt to deserialize the contents of this <see cref="T:Microsoft.Bot.Streaming.ReceiveRequest"/>'s body into.</typeparam>
            <param name="request">The current instance of <see cref="T:Microsoft.Bot.Streaming.ReceiveRequest"/>.</param>
            <returns>On success, an object of type T populated with data serialized from the <see cref="T:Microsoft.Bot.Streaming.ReceiveRequest"/> body.
            Otherwise a default instance of type T.
            </returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.ReceiveRequestExtensions.ReadBodyAsString(Microsoft.Bot.Streaming.ReceiveRequest)">
            <summary>
            Reads the body of this <see cref="T:Microsoft.Bot.Streaming.ReceiveRequest"/> as a string.
            </summary>
            <param name="request">The current instance of <see cref="T:Microsoft.Bot.Streaming.ReceiveRequest"/>.</param>
            <returns>On success, a string populated with data read from the <see cref="T:Microsoft.Bot.Streaming.ReceiveRequest"/> body.
            Otherwise null.
            </returns>
        </member>
        <member name="T:Microsoft.Bot.Streaming.ReceiveResponse">
            <summary>
            A response received by a <see cref="T:Microsoft.Bot.Streaming.Transport.IStreamingTransportServer"/> or <see cref="T:Microsoft.Bot.Streaming.Transport.IStreamingTransportClient"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.ReceiveResponse.StatusCode">
            <summary>
            Gets or sets the status code of this response.
            </summary>
            <value>
            The numeric portion of a status code.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.ReceiveResponse.Streams">
            <summary>
            Gets or sets the collection of <see cref="T:Microsoft.Bot.Streaming.Payloads.IContentStream"/>s contained within this response.
            </summary>
            <value>
            A <see cref="T:System.Collections.Generic.List`1"/> of type <see cref="T:Microsoft.Bot.Streaming.Payloads.IContentStream"/> containing information on streams attached to this response.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Streaming.ReceiveResponseExtensions">
            <summary>
            Helper methods added to the <see cref="T:Microsoft.Bot.Streaming.ReceiveResponse"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.ReceiveResponseExtensions.ReadBodyAsJson``1(Microsoft.Bot.Streaming.ReceiveResponse)">
            <summary>
            Serializes the body of this <see cref="T:Microsoft.Bot.Streaming.ReceiveResponse"/> as JSON.
            </summary>
            <typeparam name="T">The type to attempt to deserialize the contents of this <see cref="T:Microsoft.Bot.Streaming.ReceiveResponse"/>'s body into.</typeparam>
            <param name="response">The current instance of <see cref="T:Microsoft.Bot.Streaming.ReceiveResponse"/>.</param>
            <returns>On success, an object of type T populated with data serialized from the <see cref="T:Microsoft.Bot.Streaming.ReceiveResponse"/> body.
            Otherwise a default instance of type T.
            </returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.ReceiveResponseExtensions.ReadBodyAsString(Microsoft.Bot.Streaming.ReceiveResponse)">
            <summary>
            Serializes the body of this <see cref="T:Microsoft.Bot.Streaming.ReceiveResponse"/> as a <see cref="T:System.String"/>.
            </summary>
            <param name="response">The current instance of <see cref="T:Microsoft.Bot.Streaming.ReceiveResponse"/>.</param>
            <returns>On success, an <see cref="T:System.String"/> of the data from the <see cref="T:Microsoft.Bot.Streaming.ReceiveResponse"/> body.
            </returns>
        </member>
        <member name="T:Microsoft.Bot.Streaming.RequestHandler">
            <summary>
            Implemented by classes used to process incoming requests sent over an IStreamingTransport and adhering to the Bot Framework Protocol v3 with Streaming Extensions.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.RequestHandler.ProcessRequestAsync(Microsoft.Bot.Streaming.ReceiveRequest,Microsoft.Extensions.Logging.ILogger{Microsoft.Bot.Streaming.RequestHandler},System.Object,System.Threading.CancellationToken)">
            <summary>
            The method that must be implemented in order to handle incoming requests.
            </summary>
            <param name="request">A <see cref="T:Microsoft.Bot.Streaming.ReceiveRequest"/> for this handler to process.</param>
            <param name="logger">Logger.</param>
            <param name="context">Optional context to process the request within.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will produce a <see cref="T:Microsoft.Bot.Streaming.StreamingResponse"/> on successful completion.</returns>
        </member>
        <member name="T:Microsoft.Bot.Streaming.SerializationSettings">
            <summary>
            This class defines the settings used when serializing data contained by objects
            included as part of the Bot Framework Protocol v3 with Streaming Extensions.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Streaming.SerializationSettings.ApplicationJson">
            <summary>
            The value that should be used as the content-type header for application json.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Streaming.SerializationSettings.BotSchemaSerializationSettings">
            <summary>
            The serialization settings for use when operating on objects defined within the bot schema.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Streaming.SerializationSettings.DefaultSerializationSettings">
            <summary>
            The default serialization settings for use in most cases.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Streaming.SerializationSettings.DefaultDeserializationSettings">
            <summary>
            The default deserialization settings for use in most cases.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamExtensions.ReadAsUtf8StringAsync(System.IO.Stream)">
            <summary>
            Read the contents of the stream and convert to an Utf8 string.
            </summary>
            <param name="stream">The stream.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamExtensions.ReadAsUtf8String(System.IO.Stream)">
            <summary>
            Read the contents of the stream and convert to an Utf8 string.
            </summary>
            <param name="stream">The stream.</param>
            <returns>Stream contents as string.</returns>
        </member>
        <member name="T:Microsoft.Bot.Streaming.StreamingRequest">
            <summary>
            Implementation split between Request and RequestEx.
            The basic request type sent over Bot Framework Protocol 3 with Streaming Extensions transports,
            equivalent to HTTP request messages.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Streaming.StreamingRequest.GET">
            <summary>
            Verb used by requests to get resources hosted on a remote server.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Streaming.StreamingRequest.POST">
            <summary>
            Verb used by requests posting data to a remote server.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Streaming.StreamingRequest.PUT">
            <summary>
            Verb used by requests putting updated data on a remote server.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Streaming.StreamingRequest.DELETE">
            <summary>
            Verb used by requests to delete data hosted on a remote server.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.StreamingRequest.Verb">
            <summary>
            Gets or sets the verb action this request will perform.
            </summary>
            <value>
            The string representation of an HTTP verb.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.StreamingRequest.Path">
            <summary>
            Gets or sets the path this request will route to on the remote server.
            </summary>
            <value>
            The string representation of the URL style path to request at the remote server.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.StreamingRequest.Streams">
            <summary>
            Gets or sets the collection of stream attachments included in this request.
            </summary>
            <value>
            A <see cref="T:System.Collections.Generic.List`1"/> of <see cref="T:Microsoft.Bot.Streaming.Payloads.ResponseMessageStream"/> items associated with this request.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingRequest.CreateGet(System.String,System.Net.Http.HttpContent)">
            <summary>
            Creates a <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> to get resources hosted on a remote server.
            </summary>
            <param name="path">Optional path where the resource can be found on the remote server.</param>
            <param name="body">Optional body to send to the remote server.</param>
            <returns>A <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> with appropriate status code and body.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingRequest.CreatePost(System.String,System.Net.Http.HttpContent)">
            <summary>
            Creates a <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> to post data to a remote server.
            </summary>
            <param name="path">Optional path where the resource can be found on the remote server.</param>
            <param name="body">Optional body to send to the remote server.</param>
            <returns>A <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> with appropriate status code and body.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingRequest.CreatePut(System.String,System.Net.Http.HttpContent)">
            <summary>
            Creates a <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> to put updated data on a remote server.
            </summary>
            <param name="path">Optional path where the resource can be found on the remote server.</param>
            <param name="body">Optional body to send to the remote server.</param>
            <returns>A <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> with appropriate status code and body.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingRequest.CreateDelete(System.String,System.Net.Http.HttpContent)">
            <summary>
            Creates a <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> to delete data hosted on a remote server.
            </summary>
            <param name="path">Optional path where the resource can be found on the remote server.</param>
            <param name="body">Optional body to send to the remote server.</param>
            <returns>A <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> with appropriate status code and body.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingRequest.CreateRequest(System.String,System.String,System.Net.Http.HttpContent)">
            <summary>
            Creates a <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> with the passed in method, path, and body.
            </summary>
            <param name="method">The HTTP verb to use for this request.</param>
            <param name="path">Optional path where the resource can be found on the remote server.</param>
            <param name="body">Optional body to send to the remote server.</param>
            <returns>On success returns a <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> with appropriate status code and body, otherwise returns null.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingRequest.AddStream(System.Net.Http.HttpContent)">
            <summary>
            Adds a new stream attachment to this <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/>.
            </summary>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> to include in the new stream attachment.</param>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingRequest.AddStream(System.Net.Http.HttpContent,System.Guid)">
            <summary>
            Adds a new stream attachment to this <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/>.
            </summary>
            <param name="content">The <see cref="T:System.Net.Http.HttpContent"/> to include in the new stream attachment.</param>
            <param name="streamId">The id to assign to this stream attachment.</param>
        </member>
        <member name="T:Microsoft.Bot.Streaming.StreamingRequestExtensions">
            <summary>
            Helper methods for use with instances of the <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingRequestExtensions.SetBody(Microsoft.Bot.Streaming.StreamingRequest,System.String)">
            <summary>
            Adds a new stream to this <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> containing the passed in body.
            Noop on null body or null request.
            </summary>
            <param name="request">The <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> instance to attach this body to.</param>
            <param name="body">A string containing the data to insert into the stream.</param>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingRequestExtensions.SetBody(Microsoft.Bot.Streaming.StreamingRequest,System.Object)">
            <summary>
            Adds a new stream to this <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> containing the passed in body.
            Noop on null body or null request.
            </summary>
            <param name="request">The <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> instance to attach this body to.</param>
            <param name="body">An object containing the data to insert into the stream.</param>
        </member>
        <member name="T:Microsoft.Bot.Streaming.StreamingResponse">
            <summary>
            Implementation split between Response and ResponseEx.
            The basic response type sent over Bot Framework Protocol 3 with Streaming Extensions transports,
            equivalent to HTTP response messages.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.StreamingResponse.StatusCode">
            <summary>
            Gets or sets the numeric status code for the response.
            </summary>
            <value>
            The numeric status code for the response.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.StreamingResponse.Streams">
            <summary>
            Gets or sets the collection of streams attached to this response.
            </summary>
            <value>
            A <see cref="T:System.Collections.Generic.List`1"/> of type <see cref="T:Microsoft.Bot.Streaming.Payloads.ResponseMessageStream"/>.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingResponse.NotFound(System.Net.Http.HttpContent)">
            <summary>
            Creates a response indicating the requested resource was not found.
            </summary>
            <param name="body">An optional body containing additional information.</param>
            <returns>A response with the appropriate statuscode and passed in body.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingResponse.Forbidden(System.Net.Http.HttpContent)">
            <summary>
            Creates a response indicating the requested resource is forbidden.
            </summary>
            <param name="body">An optional body containing additional information.</param>
            <returns>A response with the appropriate statuscode and passed in body.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingResponse.OK(System.Net.Http.HttpContent)">
            <summary>
            Creates a response indicating the request was successful.
            </summary>
            <param name="body">An optional body containing additional information.</param>
            <returns>A response with the appropriate statuscode and passed in body.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingResponse.InternalServerError(System.Net.Http.HttpContent)">
            <summary>
            Creates a response indicating the server encountered an error while processing the request.
            </summary>
            <param name="body">An optional body containing additional information.</param>
            <returns>A response with the appropriate statuscode and passed in body.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingResponse.CreateResponse(System.Net.HttpStatusCode,System.Net.Http.HttpContent)">
            <summary>
            Creates a response using the passed in statusCode and optional body.
            </summary>
            <param name="statusCode">The <see cref="T:System.Net.HttpStatusCode"/> to set on the <see cref="T:Microsoft.Bot.Streaming.StreamingResponse"/>.</param>
            <param name="body">An optional body containing additional information.</param>
            <returns>A response with the appropriate statuscode and passed in body.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingResponse.AddStream(System.Net.Http.HttpContent)">
            <summary>
            Adds a new stream to the passed in <see cref="T:Microsoft.Bot.Streaming.StreamingResponse"/> containing the passed in content.
            Throws <see cref="T:System.ArgumentNullException"/> if content is null.
            </summary>
            <param name="content">An <see cref="T:System.Net.Http.HttpContent"/> instance containing the data to insert into the stream.</param>
        </member>
        <member name="T:Microsoft.Bot.Streaming.StreamingResponseExtensions">
            <summary>
            Extends the <see cref="T:Microsoft.Bot.Streaming.StreamingResponse"/> class with additional methods.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingResponseExtensions.SetBody(Microsoft.Bot.Streaming.StreamingResponse,System.String)">
            <summary>
            Adds a new stream to this <see cref="T:Microsoft.Bot.Streaming.StreamingResponse"/> containing the passed in body.
            Noop on empty body or null response.
            </summary>
            <param name="response">The <see cref="T:Microsoft.Bot.Streaming.StreamingResponse"/> instance to attach this body to.</param>
            <param name="body">A string containing the data to insert into the stream.</param>
        </member>
        <member name="M:Microsoft.Bot.Streaming.StreamingResponseExtensions.SetBody(Microsoft.Bot.Streaming.StreamingResponse,System.Object)">
            <summary>
            Adds a new stream to this <see cref="T:Microsoft.Bot.Streaming.StreamingResponse"/> containing the passed in body.
            Noop on null body or null response.
            </summary>
            <param name="response">The <see cref="T:Microsoft.Bot.Streaming.StreamingResponse"/> instance to attach this body to.</param>
            <param name="body">An object containing the data to insert into the stream.</param>
        </member>
        <member name="T:Microsoft.Bot.Streaming.Transport.DisconnectedEventArgs">
            <summary>
            Arguments to be included when disconnection events are fired.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Transport.DisconnectedEventArgs.Empty">
            <summary>
            Gets or sets an empty set of arguments.
            </summary>
            <value>
            A new, empty, set of <see cref="T:Microsoft.Bot.Streaming.Transport.DisconnectedEventArgs"/>.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Transport.DisconnectedEventArgs.Reason">
            <summary>
            Gets or sets the reason field of the arguments.
            </summary>
            <value>
            The reason the disconnection event fired, in plain text.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Streaming.Transport.DisconnectedEventHandler">
            <summary>
            Delegate used to setup actions to be taken when disconnection events are triggered.
            </summary>
            <param name="sender">The source of the disconnection event.</param>
            <param name="e">The arguments specified by the disconnection event.</param>
        </member>
        <member name="T:Microsoft.Bot.Streaming.Transport.IStreamingTransportClient">
            <summary>
            Implemented by clients compatible with the Bot Framework Protocol 3 with Streaming Extensions.
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Streaming.Transport.IStreamingTransportClient.Disconnected">
            <summary>
            An event used to signal when the underlying connection has disconnected.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Transport.IStreamingTransportClient.IsConnected">
            <summary>
            Gets a value indicating whether this client is currently connected.
            </summary>
            <value>
            True if this client is currently connected, otherwise false.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.IStreamingTransportClient.ConnectAsync">
            <summary>
            The task used to establish a connection for this client.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.IStreamingTransportClient.ConnectAsync(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Establish a connection passing along additional headers.
            </summary>
            <param name="requestHeaders">Dictionary of header name and header value to be passed during connection. Generally, you will need channelID and Authorization.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.IStreamingTransportClient.SendAsync(Microsoft.Bot.Streaming.StreamingRequest,System.Threading.CancellationToken)">
            <summary>
            Task used to send data over this client connection.
            </summary>
            <param name="message">The <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> to send.</param>
            <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> used to signal this operation should be cancelled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> of type <see cref="T:Microsoft.Bot.Streaming.ReceiveResponse"/> handling the send operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.IStreamingTransportClient.Disconnect">
            <summary>
            Method used to disconnect this client.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Streaming.Transport.IStreamingTransportServer">
            <summary>
            Implemented by servers compatible with the Bot Framework Protocol 3 with Streaming Extensions.
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Streaming.Transport.IStreamingTransportServer.Disconnected">
            <summary>
            An event used to signal when the underlying connection has disconnected.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.IStreamingTransportServer.StartAsync">
            <summary>
            Used to establish the connection used by this server and begin listening for incoming messages.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> to handle the server listen operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.IStreamingTransportServer.SendAsync(Microsoft.Bot.Streaming.StreamingRequest,System.Threading.CancellationToken)">
            <summary>
            Task used to send data over this server connection.
            </summary>
            <param name="request">The <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> to send.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/> used to signal this operation should be cancelled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> of type <see cref="T:Microsoft.Bot.Streaming.ReceiveResponse"/> handling the send operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeClient.#ctor(System.String,Microsoft.Bot.Streaming.RequestHandler,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeClient"/> class.
            Throws <see cref="T:System.ArgumentNullException"/> if baseName is null, empty, or whitespace.
            </summary>
            <param name="baseName">The named pipe to connect to.</param>
            <param name="requestHandler">Optional <see cref="T:Microsoft.Bot.Streaming.RequestHandler"/> to process incoming messages received by this client.</param>
            <param name="autoReconnect">Optional setting to determine if the client sould attempt to reconnect
            automatically on disconnection events. Defaults to true.
            </param>
        </member>
        <member name="E:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeClient.Disconnected">
            <summary>
            An event to be fired when the underlying transport is disconnected. Any application communicating with this client should subscribe to this event.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeClient.IsConnected">
            <summary>
            Gets a value indicating whether or not this client is currently connected.
            </summary>
            <returns>
            True if this client is connected and ready to send and receive messages, otherwise false.
            </returns>
            <value>
            A boolean value indicating whether or not this client is currently connected.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeClient.IncomingConnected">
            <summary>
            Gets a value indicating whether the NamedPipeClient has an incoming pipe connection.
            </summary>
            <value>
            A boolean value indicating whether or not this client is currently connected to an incoming pipe.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeClient.OutgoingConnected">
            <summary>
            Gets a value indicating whether the NamedPipeClient has an outgoing pipe connection.
            </summary>
            <value>
            A boolean value indicating whether or not this client is currently connected to an outgoing pipe.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeClient.ConnectAsync">
            <summary>
            Establish a connection with no custom headers.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will not resolve until the client stops listening for incoming messages.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeClient.ConnectAsync(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Establish a connection with optional custom headers.
            </summary>
            <param name="requestHeaders">An optional <see cref="T:System.Collections.Generic.IDictionary`2"/> of string header names and string header values to include when sending the
            initial request to establish this connection.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will not resolve until the client stops listening for incoming messages.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeClient.SendAsync(Microsoft.Bot.Streaming.StreamingRequest,System.Threading.CancellationToken)">
            <summary>
            Task used to send data over this client connection.
            Throws <see cref="T:System.InvalidOperationException"/> if called when the client is disconnected.
            Throws <see cref="T:System.ArgumentNullException"/> if message is null.
            </summary>
            <param name="message">The <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> to send.</param>
            <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> used to signal this operation should be cancelled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will produce an instance of <see cref="T:Microsoft.Bot.Streaming.ReceiveResponse"/> on completion of the send operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeClient.Disconnect">
            <summary>
            Method used to disconnect this client.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeClient.Dispose">
            <summary>
            Method used to disconnect this client.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeServer">
            <summary>
            A server for use with the Bot Framework Protocol V3 with Streaming Extensions and an underlying Named Pipe transport.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeServer.#ctor(System.String,Microsoft.Bot.Streaming.RequestHandler,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeServer"/> class.
            Throws <see cref="T:System.ArgumentNullException"/> on null arguments.
            </summary>
            <param name="baseName">The named pipe to connect to.</param>
            <param name="requestHandler">A <see cref="T:Microsoft.Bot.Streaming.RequestHandler"/> to process incoming messages received by this server.</param>
            <param name="autoReconnect">Optional setting to determine if the server sould attempt to reconnect
            automatically on disconnection events. Defaults to true.
            </param>
        </member>
        <member name="E:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeServer.Disconnected">
            <summary>
            An event to be fired when the underlying transport is disconnected. Any application communicating with this server should subscribe to this event.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeServer.IsConnected">
            <summary>
            Gets a value indicating whether or not this server is currently connected.
            </summary>
            <returns>
            True if this server is connected and ready to send and receive messages, otherwise false.
            </returns>
            <value>
            A boolean value indicating whether or not this server is currently connected.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeServer.StartAsync">
            <summary>
            Used to establish the connection used by this server and begin listening for incoming messages.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> to handle the server listen operation. This task will not resolve as long as the server is running.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeServer.SendAsync(Microsoft.Bot.Streaming.StreamingRequest,System.Threading.CancellationToken)">
            <summary>
            Task used to send data over this server connection.
            Throws <see cref="T:System.InvalidOperationException"/> if called when server is not connected.
            Throws <see cref="T:System.ArgumentNullException"/> if request is null.
            </summary>
            <param name="request">The <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> to send.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken"/> used to signal this operation should be cancelled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> of type <see cref="T:Microsoft.Bot.Streaming.ReceiveResponse"/> handling the send operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.NamedPipes.NamedPipeServer.Disconnect">
            <summary>
            Disconnects the NamedPipeServer.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketClient">
            <summary>
            A client for use with the Bot Framework Protocol V3 with Streaming Extensions and an underlying WebSocket transport.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketClient.#ctor(System.String,Microsoft.Bot.Streaming.RequestHandler,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketClient"/> class.
            Throws <see cref="T:System.ArgumentNullException"/> if URL is null, empty, or whitespace.
            </summary>
            <param name="url">The URL of the remote server to connect to.</param>
            <param name="requestHandler">Optional <see cref="T:Microsoft.Bot.Streaming.RequestHandler"/> to process incoming messages received by this server.</param>
            <param name="handlerContext">Optional context for the <see cref="T:Microsoft.Bot.Streaming.RequestHandler"/> to operate within.</param>
        </member>
        <member name="E:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketClient.Disconnected">
            <summary>
            An event to be fired when the underlying transport is disconnected. Any application communicating with this client should subscribe to this event.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketClient.LastMessageSendTime">
            <summary>
            Gets the UTC time of the last send on this client. Made available for use when cleaning up idle clients.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> representing the UTC time of the last send on this client.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketClient.IsConnected">
            <summary>
            Gets a value indicating whether or not this client is currently connected.
            </summary>
            <returns>
            True if this client is connected and ready to send and receive messages, otherwise false.
            </returns>
            <value>
            A boolean value indicating whether or not this client is currently connected.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketClient.ConnectAsync">
            <summary>
            Establish a connection with no custom headers.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will not resolve until the client stops listening for incoming messages.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketClient.ConnectAsync(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Establish a connection with optional custom headers.
            </summary>
            <param name="requestHeaders">An optional <see cref="T:System.Collections.Generic.IDictionary`2"/> of string header names and string header values to include when sending the
            initial request to establish this connection.
            </param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will not resolve until the client stops listening for incoming messages.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketClient.ConnectAsyncEx(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
            <summary>
            Establish a connection with optional custom headers.
            </summary>
            <param name="requestHeaders">An optional <see cref="T:System.Collections.Generic.IDictionary`2"/> of string header names and string header values to include when sending the
            initial request to establish this connection.
            </param>
            <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> used to signal this operation should be cancelled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will not resolve until the client stops listening for incoming messages.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketClient.SendAsync(Microsoft.Bot.Streaming.StreamingRequest,System.Threading.CancellationToken)">
            <summary>
            Task used to send data over this client connection.
            Throws <see cref="T:System.InvalidOperationException"/> if called when the client is disconnected.
            Throws <see cref="T:System.ArgumentNullException"/> if message is null.
            </summary>
            <param name="message">The <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> to send.</param>
            <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken"/> used to signal this operation should be cancelled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> that will produce an instance of <see cref="T:Microsoft.Bot.Streaming.ReceiveResponse"/> on completion of the send operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketClient.Disconnect">
            <summary>
            Method used to disconnect this client.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketClient.Dispose">
            <summary>
            Method used to disconnect this client.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketServer">
            <summary>
            A server for use with the Bot Framework Protocol V3 with Streaming Extensions and an underlying WebSocket transport.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketServer.#ctor(System.Net.WebSockets.WebSocket,Microsoft.Bot.Streaming.RequestHandler)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketServer"/> class.
            Throws <see cref="T:System.ArgumentNullException"/> on null arguments.
            </summary>
            <param name="socket">The <see cref="T:System.Net.WebSockets.WebSocket"/> of the underlying connection for this server to be built on top of.</param>
            <param name="requestHandler">A <see cref="T:Microsoft.Bot.Streaming.RequestHandler"/> to process incoming messages received by this server.</param>
        </member>
        <member name="E:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketServer.Disconnected">
            <summary>
            An event to be fired when the underlying transport is disconnected. Any application communicating with this server should subscribe to this event.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketServer.IsConnected">
            <summary>
            Gets a value indicating whether or not this server is currently connected.
            </summary>
            <returns>
            True if this server is connected and ready to send and receive messages, otherwise false.
            </returns>
            <value>
            A boolean value indicating whether or not this server is currently connected.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketServer.StartAsync">
            <summary>
            Used to establish the connection used by this server and begin listening for incoming messages.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> to handle the server listen operation. This task will not resolve as long as the server is running.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketServer.SendAsync(Microsoft.Bot.Streaming.StreamingRequest,System.Threading.CancellationToken)">
            <summary>
            Task used to send data over this server connection.
            Throws <see cref="T:System.InvalidOperationException"/> if called when server is not connected.
            Throws <see cref="T:System.ArgumentNullException"/> if request is null.
            </summary>
            <param name="request">The <see cref="T:Microsoft.Bot.Streaming.StreamingRequest"/> to send.</param>
            <param name="cancellationToken">Optional <see cref="T:System.Threading.CancellationToken"/> used to signal this operation should be cancelled.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> of type <see cref="T:Microsoft.Bot.Streaming.ReceiveResponse"/> handling the send operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Transport.WebSockets.WebSocketServer.Disconnect">
            <summary>
            Disconnects the WebSocketServer.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Utilities.Background.Run(System.Func{System.Threading.Tasks.Task},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Register background task with ASP.Net hosting environment and trace exceptions
            Falls back to Thread pool if not running under ASP.Net.
            </summary>
            <param name="task">Background task to execute.</param>
            <param name="properties">Name value pairs to trace if an exception is thrown.</param>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Utilities.Background.Run(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Register background task with ASP.Net hosting environment and trace exceptions
            Falls back to Thread pool if not running under ASP.Net.
            </summary>
            <param name="task">background task to execute.</param>
            <param name="properties">name value pairs to trace if an exception is thrown.</param>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Utilities.Background.RunForever(System.Func{System.Threading.CancellationToken,System.TimeSpan},System.TimeSpan,System.String)">
            <summary>
            Register periodic background task with ASP.Net hosting environment and trace exceptions.
            </summary>
            <param name="task">background task to execute.</param>
            <param name="spanDelay">the initial delay.</param>
            <param name="eventName">the event name to log individual execution failures.</param>
        </member>
        <member name="M:Microsoft.Bot.Streaming.Utilities.Background.RunForever(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.TimeSpan}},System.TimeSpan,System.String)">
            <summary>
            Register periodic background task with ASP.Net hosting environment and trace exceptions.
            </summary>
            <param name="task">Background task to execute.</param>
            <param name="spanDelay">The initial delay.</param>
            <param name="eventName">The event name to log individual execution failures.</param>
        </member>
    </members>
</doc>
