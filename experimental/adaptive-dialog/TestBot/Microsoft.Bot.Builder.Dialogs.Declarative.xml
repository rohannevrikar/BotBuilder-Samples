<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Bot.Builder.Dialogs.Declarative</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.ComponentRegistration">
            <summary>
            ComponentRegistration is a placeholder class for discovering assets from components. 
            </summary>
            <remarks>
            To make your components available to the system you derive from ComponentRegistration and implement the 
            interfaces which definethe components.  These components then are consumed in appropriate places by the 
            systems that need them. For example, to add declarative types to the system you simply add class that 
            implements IComponentDeclarativeTypes.
            <code>
            public class MyComponentRegistration : IComponentDeclarativeTypes
            {
                public IEnumerable&lt;DeclarativeType&gt;()
                {  
                     yield return new DeclarativeType&lt;MyType&gt;("Contoso.MyType");
                     ...
                }
            }
            </code>
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.ComponentRegistration.Registrations">
            <summary>
            Gets list of all classes in process which are derived from ComponentRegistration.
            </summary>
            <remarks>
            This is a lazy list because we only want to do this work once.  This calculates this by
            using Reflection over all of the assemblies in the AppDomain (and their references) to discover
            all of the ComponentRegistrationClasses and build a list of them.
            </remarks>
            <value>
            A list of ComponentRegistration objects.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType">
            <summary>
            DeclarativeType object which is $kind => type.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType"/> class.
            </summary>
            <param name="kind">$kind.</param>
            <param name="type">type.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType.Kind">
            <summary>
            Gets or sets the declarative id for this type.
            </summary>
            <value>
            The declarative id for this type.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType.Type">
            <summary>
            Gets or sets the type for this registration.
            </summary>
            <value>
            The type for this registration.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType.CustomDeserializer">
            <summary>
            Gets or sets an optional custom deserializer for this type.
            </summary>
            <value>
            An optional custom deserializer for this type.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.DeclarativeType`1">
            <summary>
            TypeRegistration of Kind => type using generic.
            </summary>
            <typeparam name="T">type.</typeparam>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.IComponentDeclarativeTypes">
            <summary>
            Interface for registering declarative kinds and jsonconverters to support them.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.IComponentDeclarativeTypes.GetDeclarativeTypes">
            <summary>
            Return an enumeration of KindRegistrations $kind => Type.
            </summary>
            <returns>declarative type registration.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.IComponentDeclarativeTypes.GetConverters(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer,System.Collections.Generic.Stack{System.String})">
            <summary>
            Return an enumeration of JsonConverters for supporting loading declarative types.
            </summary>
            <param name="resourceExplorer">resourceExplorer.</param>
            <param name="paths">paths.</param>
            <returns>jsonsconverters.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Loaders.ComponentDialogLoader">
            <summary>
            Type loader specifically for ComponentDialog since
            needs custom loading of the dialogs collection.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FileResource">
            <summary>
            Class which represents a file as a resource.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FileResource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FileResource"/> class.
            </summary>
            <param name="path">path to file.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FileResource.Id">
            <summary>
            Gets resource Id for the resource.
            </summary>
            <value>
            ResourceId.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FileResource.FullName">
            <summary>
            Gets the resource path.
            </summary>
            <value>
            The full path to the resource on disk.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FileResource.OpenStreamAsync">
            <summary>
            Open a stream to the resource.
            </summary>
            <returns>Stream for accesssing the content of the resource.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FileResource.ReadTextAsync">
            <summary>
            Get resource as a text.
            </summary>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> with the string.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider">
            <summary>
            Class which gives ResourceExplorer access to resources which are stored in file system.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider"/> class.
            </summary>
            <param name="folder">Folder.</param>
            <param name="includeSubFolders">Should include sub folders.</param>
            <param name="monitorChanges">Should monitor changes.</param>
        </member>
        <member name="E:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider.Changed">
            <summary>
            Event which fires when monitoring folder for file changes.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider.Extensions">
            <summary>
            Gets the extensions that you want the FolderResourceProvider to manage.
            </summary>
            <value>
            The extensions that you want the FolderResourceProvider to manage.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider.Directory">
            <summary>
            Gets or sets folder to enumerate.
            </summary>
            <value>
            folder to enumerate.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider.IncludeSubFolders">
            <summary>
            Gets or sets a value indicating whether to include subfolders.
            </summary>
            <value>
            A value indicating whether to include subfolders.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider.Id">
            <summary>
            Gets the id for this provider (the folder it is bound to).
            </summary>
            <value>
            The id for this provider (the folder it is bound to).
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider.TryGetResource(System.String,Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResource@)">
            <summary>
            GetResource by id.
            </summary>
            <param name="id">Resource ID.</param>
            <param name="resource">the found resource.</param>
            <returns>true if resource was found.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProvider.GetResources(System.String)">
            <summary>
            Get Resources by extension.
            </summary>
            <param name="extension">Resource extension.</param>
            <returns>Collection of resources.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProviderExtensions">
            <summary>
            Folder/FileResources.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProviderExtensions.AddFolder(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer,System.String,System.Boolean,System.Boolean)">
            <summary>
            Add a folder resource.
            </summary>
            <param name="explorer">The <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer"/> for this extension method.</param>
            <param name="folder">Folder to include as a resource.</param>
            <param name="includeSubFolders">Whether to include subfolders.</param>
            <param name="monitorChanges">Whether to track changes.</param>
            <returns>The resource explorer.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProviderExtensions.AddFolders(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer,System.String,System.String[],System.Boolean)">
            <summary>
             Add folder resources.
            </summary>
            <param name="explorer">The <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer"/> for this extension method.</param>
            <param name="folder">Collection of folders to include as resources.</param>
            <param name="ignoreFolders">Folders to ignore.</param>
            <param name="monitorChanges">Whether to track changes.</param>
            <returns>The resource explorer.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.FolderResourceProviderExtensions.LoadProject(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer,System.String,System.String[],System.Boolean)">
            <summary>
            Add a .csproj as resource (adding the project, referenced projects and referenced packages).
            </summary>
            <param name="resourceExplorer">resource explorer.</param>
            <param name="projectFile">Project file.</param>
            <param name="ignoreFolders">Folders to ignore.</param>
            <param name="monitorChanges">Whether to track changes.</param>
            <returns>A new <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer"/>.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResource">
            <summary>
            Interface for access the content of a resource.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResource.Id">
            <summary>
            Gets resource name.
            </summary>
            <value>
            Resource name.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResource.ReadTextAsync">
            <summary>
            Get resource as text async.
            </summary>
            <returns>The resource as text.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResource.OpenStreamAsync">
            <summary>
            Get readonly stream. 
            </summary>
            <returns>The resource as a stream.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResourceProvider">
            <summary>
            Interface for looking up a resource by id.
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResourceProvider.Changed">
            <summary>
            Event which is fired if any resource managed by the resource provider detects changes to the underlining resource.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResourceProvider.Id">
            <summary>
            Gets id for the resource provider.
            </summary>
            <value>
            id for the resource provider.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResourceProvider.TryGetResource(System.String,Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResource@)">
            <summary>
            Get resource by id.
            </summary>
            <param name="id">Resource id.</param>
            <param name="resource">resource.</param>
            <returns>true if resource is found.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResourceProvider.GetResources(System.String)">
            <summary>
            enumerate resources.
            </summary>
            <param name="extension">Extension filter.</param>
            <returns>The resources.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer">
            <summary>
            Class which gives standard access to content resources.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer"/> class.
            </summary>
        </member>
        <member name="E:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.Changed">
            <summary>
            Event which fires when a resource is changed.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.ResourceProviders">
            <summary>
            Gets the resource providers.
            </summary>
            <value>
            The resource providers.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.AddResourceProvider(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResourceProvider)">
            <summary>
            Add a resource provider to the resources managed by the resource explorer.
            </summary>
            <param name="resourceProvider">resource provider.</param>
            <returns>resource explorer so that you can fluently call multiple methods on the resource explorer.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.LoadType``1(System.String)">
            <summary>
            Create Type from resource.
            </summary>
            <typeparam name="T">type to create.</typeparam>
            <param name="resourceId">resourceId to bind to.</param>
            <returns>created type.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.LoadType``1(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResource)">
            <summary>
            Create Type from resource.
            </summary>
            <typeparam name="T">type to create.</typeparam>
            <param name="resource">resource to bind to.</param>
            <returns>created type.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.LoadTypeAsync``1(Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResource)">
            <summary>
            Create Type from resource.
            </summary>
            <typeparam name="T">type to create.</typeparam>
            <param name="resource">resource to bind to.</param>
            <returns>task which will resolve to created type.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.GetResources(System.String)">
            <summary>
            Get resources of a given type.
            </summary>
            <param name="fileExtension">File extension filter.</param>
            <returns>The resources.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.GetResource(System.String)">
            <summary>
            Get resource by id.
            </summary>
            <param name="id">The resource id.</param>
            <returns>The resource, or throws if not found.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.TryGetResource(System.String,Microsoft.Bot.Builder.Dialogs.Declarative.Resources.IResource@)">
            <summary>
            Try to get the resource by id.
            </summary>
            <param name="id">The id.</param>
            <param name="resource">resource that was found or null.</param>
            <returns>true if found.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.RegisterType``1(System.String,Microsoft.Bot.Builder.Dialogs.Declarative.Loaders.ICustomDeserializer)">
            <summary>
            Register a declarative type with the resource loader system.
            </summary>
            <typeparam name="T">type of object to create.</typeparam>
            <param name="kind">the $kind name to map to this type.</param>
            <param name="loader">optional custom deserializer.</param>
            <returns>Resource explorer for fluent style multiple calls.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.RegisterType(System.String,System.Type,Microsoft.Bot.Builder.Dialogs.Declarative.Loaders.ICustomDeserializer)">
            <summary>
            Register a declarative type with the resource loader system.
            </summary>
            <param name="kind">the $kind name to map to this type.</param>
            <param name="type">type of object to create.</param>
            <param name="loader">optional custom deserializer.</param>
            <returns>Resource explorer for fluent style multiple calls.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.BuildType``1(System.String,Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Build type for given $kind using the JToken/serializer as the source.
            </summary>
            <typeparam name="T">type of object to create.</typeparam>
            <param name="kind">$kind.</param>
            <param name="obj">source object.</param>
            <param name="serializer">serializer to user.</param>
            <returns>instantiated object of type(T).</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.GetTypeForKind(System.String)">
            <summary>
            Get the type for $kind.
            </summary>
            <param name="kind">$kind.</param>
            <returns>type of object.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.GetKindForType(System.Type)">
            <summary>
            Get the $kind for a type.
            </summary>
            <param name="type">type.</param>
            <returns>$kind for the type.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.GetKindForType``1">
            <summary>
            Get the $kind for a type.
            </summary>
            <typeparam name="T">type.</typeparam>
            <returns>$kind for the type.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.Dispose">
            <summary>
            Dispose of internal resources.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.IsRef(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Determine if token is a reference.
            </summary>
            <param name="token">jtoken.</param>
            <returns>true if it is string ref.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Declarative.Resources.ResourceExplorer.ResolveRefAsync(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Resolves a ref to the actual object.
            </summary>
            <param name="refToken">reference.</param>
            <returns>resolved object the reference refers to.</returns>
        </member>
    </members>
</doc>
